{"version":3,"file":"js/662.1046d9e9.js","mappings":"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","sources":["webpack://test/./examples/views/the_demo/the_demo_style/TheDemoTheme.vue?9469","webpack://test/./examples/common/mix/popDemoName.js","webpack://test/./examples/views/the_demo/the_demo_style/TheDemoTheme.vue","webpack://test/./examples/views/the_demo/the_demo_style/TheDemoTheme.vue?8540","webpack://test/./examples/views/the_demo/the_demo_style/TheDemoTheme.vue?fe3b"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".theme-item>span{padding-left:8px}.color-box{align-items:top;display:flex}.color-box>*{width:130px;display:inline-block}.color-box p{font-size:19px}.color{border:3px solid var(--border-dark);border-radius:var(--m-radius);height:50px;width:50px;margin:5px}.show-h-tag>:last-child{margin-left:10px}.show-h-tag>*{display:inline-block}.shadow{box-shadow:0 2px 10px 1px var(--shadow)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","export default {\n    mounted () {\n        this.$emit(\"md-title\", this.$route.name)\n    },\n}\n","<template>\n    <div>\n        <h1>主题</h1>\n        <p>\n            Jet plan UI 内置了一个主题控制器\n            <high-lighter> $jetTheme </high-lighter>\n            。使用它来轻松的切换，自定义，或从网络动态加载主题\n        </p>\n        <hr />\n\n        <article id=\"theme-switcher\">\n            <h2>主题切换器：</h2>\n            <demo-box code=\"<j-all-theme />\" expand title=\"theme-switcher\">\n                <j-all-theme @setTheme=\"onSetTheme\" />\n            </demo-box>\n        </article>\n\n        <!-- 安装&使用主题 -->\n        <doc-item\n            id=\"theme-install-use\"\n            name=\"使用主题:\"\n            tag=\"h2\"\n            noPadding\n            noDot\n        >\n            <hr />\n            <ul>\n                <li id=\"set-theme-at-main-file\">\n                    <p class=\"text-hint\">在'main.js'（app 入口 js）:</p>\n                    <demo-box\n                        title=\"main.js\"\n                        code=\"\n// 导入ui和主题\nimport ui from 'jet-plan-ui'\nimport { jetPlanLight } from 'jet-plan-ui-theme'\n\n// 安装主题\nui.$jetTheme.installTheme(\n    'jet-ui-light',\n    jetPlanLight\n)\n\n// 通过向 '.setTheme' 方法指定 主题的安装名来应用主题\nui.$jetTheme.setTheme('jet-ui-light')\n                    \"\n                    />\n                </li>\n                <li id=\"set-theme-at-component\">\n                    <p>在组件中更改/安装主题:</p>\n                    <p class=\"text-hint\">\n                        $JetTheme\n                        是全局注册的你可以在任何地方调用它。比如在组件中\n                    </p>\n                    <demo-box\n                        title=\"NewVueComponent\"\n                        code=\"\nimport { jetPlanDark } from 'jet-plan-ui-theme'\n\nexport default{\n    name:'some-component',\n    mounted(){\n\n        this.$jetTheme.installTheme(\n            'jet-ui-dark',\n            jetPlanDark\n        )\n\n        this.$jetTheme.setTheme('jet-ui-dark')\n    }\n}\n                    \"\n                    />\n                </li>\n                <li id=\"use-theme-pack\">\n                    <p>使用主题包:</p>\n                    <p class=\"text-hint\">\n                        主题控制的 '.install'\n                        方法接受一个对象或一个函数以一次性安装主题包内有主题\n                    </p>\n                    <demo-box\n                        title=\"\"\n                        code=\"\nimport jetPlanTheme from 'jet-plan-ui-theme';\nimport JetPlanUI from 'jet-plan-ui';\n\nui.$jetTheme.install(\n    JetPlanTheme\n);\"\n                    />\n                </li>\n            </ul>\n        </doc-item>\n        <!-- 创建主题 -->\n        <doc-item id=\"theme-create\" name=\"创建主题\" tag=\"h2\" no-dot noPadding>\n            <p>在这里讲述了如何快速定制属于你的主题</p>\n            <hr />\n            <ul>\n                <li id=\"theme-create-extend\">\n                    <h3>从现有主题创建新主题</h3>\n                    <p>\n                        使用 '$jetTheme.installTheme'\n                        方法来从现有主题拓展一个新主题\n                    </p>\n                    <demo-box\n                        title=\"js\"\n                        code=\"\n// 导入组件库和主题\nimport ui from 'jet-plan-ui'\nimport { jetPLanLight } from 'jet-plan-ui-theme'\n\n// 拓展&安装主题\nui.$jetTheme.installTheme(\n    'jetPlanLight_Red', // 主题名称\n    {\n        primary:'#ef5961' // 要覆盖的 option\n    },\n    jetPlanLight // 蓝本主题,其中所有的 option 将被继承,\n)\n                    \"\n                    />\n                </li>\n                <li id=\"theme-create-new\">\n                    <h3>创建新主题</h3>\n                    <p>\n                        如需要完全重定义主题可参照以下配置。一个完整的主题对象所包含的所有\n                        'option' 参考。\n                    </p>\n                    <demo-box\n                        title=\"jetPLanDark\"\n                        :code=\"`\n export default {\n    // BACKGROUND\n    foreground: '#363636',\n    background: '#202020',\n    disabled: '#535353',\n    border: '#6a6a6a',\n\n    // TEXT\n    'text-disabled': '#CCCCCC4d',\n    'text-hint': '#CCCCCC',\n    text: '#FCFCFC',\n\n    // INFO\n    secondary: this.border,\n    primary: '#1687a7',\n    success: '#4cd966',\n    warning: '#ecb02c',\n    error: '#f33f2e',\n    info: '#0d75ec',\n\n    // OTHERS\n    frosted_glass: this.foreground + 'b3',\n    card: this.foreground,\n    shadow: '#00000033',\n    mask: '#85858560',\n    'text-light': this.text,\n    'text-dark': '#505050',\n}\n          `\"\n                    />\n                </li>\n                <li id=\"theme-create-add-option\">\n                    <h3>自定义 option</h3>\n                    <p>\n                        如果你的组件有额外的 'option'\n                        需求则只需在注册主题时通过拓展来加入选项，或直接在主题对象中加入\n                        'option'。要使用 'option 中定义的值时则只需通过 css\n                        变量的形式引用即可。或者从当前定义的主题\n                        '$jetTheme.theme' 中读取值\n                    </p>\n                    <hr />\n                    <p>设置自定义 'option'</p>\n                    <demo-box\n                        title=\"js\"\n                        :code=\"`\n// 导入组件库和主题\nimport ui from 'jet-plan-ui'\nimport { jetPLanLight } from 'jet-plan-ui-theme'\n\n// 拓展&安装主题\nui.$jetTheme.installTheme(\n    'jetPlanLight_Red', // 新主题名称\n    {\n        myOption:'#ef5961' // 要覆盖/添加的 option\n    },\n    JetPlanLight // 蓝本主题,其中所有的 option 将被继承,\n)\n\n          `\"\n                    />\n                    <p>使用自定义 'option'</p>\n                    <demo-box\n                        title=\"css\"\n                        :code=\"`\n.body{\n    background: var(--myOption);// 以 css 变量的形式访问自定义的 option\n}\n          `\"\n                    />\n                    <p class=\"text-hint\">访问当前已应用的主题</p>\n                    <demo-box\n                        title=\"js\"\n                        :code=\"`\n // 在组件中调用当前主题\n{\n    mounted(){\n        // 可通过 'jetTheme.theme' 访问到当前使用的主题\n        this.$jetTheme.theme.myOption\n    }\n}\n          `\"\n                    />\n                </li>\n            </ul>\n        </doc-item>\n\n        <doc-item\n            id=\"theme-auto-dark-mode\"\n            name=\"创建跟随操作系统主题变换明/暗的主题\"\n            tag=\"h2\"\n            noPadding\n        >\n            <p>使用 '$jetTheme.toAuto' 方法来创建一个随系统切换的深色模式</p>\n            <demo-box\n                title=\"js\"\n                :code=\"`\n// 导入组件库和主题\nimport ui from 'jet-plan-ui'\nimport { jetPLanLight, jetPLanDark } from 'jet-plan-ui-theme'\n\n// 安装主题\nui.$jetTheme.installTheme(\n    'jetPlanAuto', // 主题名称\n\n    // 将两个主题合并为一个主题\n    $jetTheme.toAuto(\n        jetPLanLight, // 第一位参数提供亮色主题\n        jetPLanDark // 第二位参数提供暗色主题\n    )\n)\n            `\"\n            />\n        </doc-item>\n    </div>\n</template>\n\n<script>\nimport pdn from '../../../common/mix/popDemoName';\nimport DocItem from '../../../common/DocItem.vue';\nexport default {\n    components: { DocItem },\n    name: 'the-demo-style',\n    mixins: [pdn],\n    methods: {\n        onSetTheme(themeName) {\n            this.$jetAlert.info(`主题设置为 - ${themeName}`, 2000);\n        },\n    },\n};\n</script>\n\n<style>\n.theme-item > span {\n    padding-left: 8px;\n}\n\n.color-box {\n    align-items: top;\n    display: flex;\n}\n.color-box > * {\n    width: 130px;\n    display: inline-block;\n}\n.color-box p {\n    font-size: 19px;\n}\n\n.color {\n    border: 3px solid var(--border-dark);\n    border-radius: var(--m-radius);\n    height: 50px;\n    width: 50px;\n    margin: 5px;\n}\n\n.show-h-tag > *:last-child {\n    margin-left: 10px;\n}\n.show-h-tag > * {\n    display: inline-block;\n}\n.shadow {\n    box-shadow: 0 2px 10px 1px var(--shadow);\n}\n</style>\n","import { render } from \"./TheDemoTheme.vue?vue&type=template&id=24d81d3c\"\nimport script from \"./TheDemoTheme.vue?vue&type=script&lang=js\"\nexport * from \"./TheDemoTheme.vue?vue&type=script&lang=js\"\n\nimport \"./TheDemoTheme.vue?vue&type=style&index=0&id=24d81d3c&lang=css\"\n\nimport exportComponent from \"/home/runner/resource_temp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-12.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-12.use[3]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./TheDemoTheme.vue?vue&type=style&index=0&id=24d81d3c&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ae32ed34\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["___CSS_LOADER_EXPORT___","push","module","id","mounted","this","$emit","$route","name","_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_high_lighter","_hoisted_5","_hoisted_7","_component_demo_box","code","expand","title","_component_j_all_theme","onSetTheme","$options","_component_doc_item","tag","noPadding","noDot","_hoisted_8","_hoisted_10","_hoisted_12","_hoisted_13","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_20","_hoisted_21","_hoisted_23","_hoisted_24","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","components","DocItem","mixins","pdn","methods","themeName","$jetAlert","info","__exports__","render","content","__esModule","default","locals","exports","add"],"sourceRoot":""}