(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-318ab6ac"],{6877:function(e,n,t){var i=t("dab6");i.__esModule&&(i=i.default),"string"===typeof i&&(i=[[e.i,i,""]]),i.locals&&(e.exports=i.locals);var l=t("499e").default;l("05d8ee39",i,!0,{sourceMap:!1,shadowMode:!1})},"7ba7":function(e,n,t){"use strict";n["a"]={mounted(){this.$emit("md-title",this.$route.name)}}},"9e11":function(e,n,t){"use strict";t("6877")},dab6:function(e,n,t){var i=t("24fb");n=i(!1),n.push([e.i,".theme-item>span{padding-left:8px}.color-box{align-items:top;display:flex}.color-box>*{width:130px;display:inline-block}.color-box p{font-size:19px}.color{border:3px solid var(--border);border-radius:var(--m-radius);height:50px;width:50px;margin:5px}.show-h-tag>:last-child{margin-left:10px}.show-h-tag>*{display:inline-block}.shadow{box-shadow:0 2px 10px 1px var(--shadow)}",""]),e.exports=n},e201:function(e,n,t){"use strict";t.r(n);var i=t("7a23");const l=Object(i["k"])(" Jet plan UI 内置了一个主题控制器 "),o=Object(i["k"])(" $jetTheme "),a=Object(i["k"])(" 。使用它来轻松的切换，自定义，或从网络动态加载主题 "),c=Object(i["i"])("hr",null,null,-1),j={id:"theme-switcher"},d=Object(i["i"])("hr",null,null,-1),h={id:"set-theme-at-main-file"},m=Object(i["i"])("p",{class:"text-hint"},"在'main.js'（app 入口 js）:",-1),r={id:"set-theme-at-component"},u=Object(i["i"])("p",null,"在组件中更改/安装主题:",-1),s=Object(i["i"])("p",{class:"text-hint"}," $JetTheme 是全局注册的你可以在任何地方调用它。比如在组件中 ",-1),p={id:"use-theme-pack"},b=Object(i["i"])("p",null,"使用主题包:",-1),O=Object(i["i"])("p",{class:"text-hint"}," 主题控制的 '.install' 方法接受一个对象或一个函数以一次性安装主题包内有主题 ",-1),f=Object(i["i"])("p",null,"在这里讲述了如何快速定制属于你的主题",-1),g=Object(i["i"])("hr",null,null,-1),x={id:"theme-create-extend"},T=Object(i["i"])("h3",null,"从现有主题创建新主题",-1),P=Object(i["i"])("p",null,"使用 '$jetTheme.installTheme' 方法来从现有主题拓展一个新主题",-1),k={id:"theme-create-new"},w=Object(i["i"])("h3",null,"创建新主题",-1),L=Object(i["i"])("p",null," 如需要完全重定义主题可参照以下配置。一个完整的主题对象所包含的所有 'option' 参考。 ",-1),$={id:"theme-create-add-option"},C=Object(i["i"])("h3",null,"自定义 option",-1),v=Object(i["i"])("p",null," 如果你的组件有额外的 'option' 需求则只需在注册主题时通过拓展来加入选项，或直接在主题对象中加入 'option'。要使用 'option 中定义的值时则只需通过 css 变量的形式引用即可。或者从当前定义的主题 '$jetTheme.theme' 中读取值 ",-1),y=Object(i["i"])("hr",null,null,-1),_=Object(i["i"])("p",null,"设置自定义 'option'",-1),D=Object(i["i"])("p",null,"使用自定义 'option'",-1),J=Object(i["i"])("br",null,null,-1),E=Object(i["i"])("p",null,"使用 '$jetTheme.toAuto' 方法来创建一个随系统切换的深色模式",-1);function Q(e,n,t,Q,A,F){const I=Object(i["E"])("high-lighter"),R=Object(i["E"])("j-all-theme"),M=Object(i["E"])("doc-item"),U=Object(i["E"])("j-code-box");return Object(i["w"])(),Object(i["h"])("div",null,[Object(i["l"])(M,{name:"主题","title-is":"h1",noDot:"",noPadding:""},{default:Object(i["Q"])(()=>[Object(i["i"])("p",null,[l,Object(i["l"])(I,null,{default:Object(i["Q"])(()=>[o]),_:1}),a]),c,Object(i["i"])("li",j,[Object(i["l"])(M,{name:"选择主题",noPadding:"","title-is":"h2"},{default:Object(i["Q"])(()=>[Object(i["l"])(R)]),_:1})]),Object(i["l"])(M,{id:"theme-install-use",name:"使用主题","title-is":"h2",noPadding:"",noDot:""},{default:Object(i["Q"])(()=>[d,Object(i["i"])("li",h,[m,Object(i["l"])(U,{code:"\n// main.js\n\n// 导入ui和主题\nimport ui from 'jet-plan-ui'\nimport { jetPlanLight } from 'jet-plan-ui-theme'\n\n// 安装主题\nui.$jetTheme.installTheme(\n    'jet-ui-light',\n    jetPlanLight\n)\n\n// 通过向 '.setTheme' 方法指定 主题的安装名来应用主题\nui.$jetTheme.setTheme('jet-ui-light')\n          "},null,8,["code"])]),Object(i["i"])("li",r,[u,s,Object(i["l"])(U,{code:"\nimport { jetPlanDark } from 'jet-plan-ui-theme'\n\nexport default{\n    name:'some-component',\n    mounted(){\n\n        this.$jetTheme.installTheme(\n            'jet-ui-dark',\n            jetPlanDark\n        )\n\n        this.$jetTheme.setTheme('jet-ui-dark')\n    }\n}\n          "},null,8,["code"])]),Object(i["i"])("li",p,[b,O,Object(i["l"])(U,{code:"\nimport JetPlanUI from 'jet-plan-ui';\nimport jetPlanTheme from 'jet-plan-ui-theme';\n\nui.$jetTheme.install(\n    JetPlanTheme\n);\n          "},null,8,["code"])])]),_:1}),Object(i["l"])(M,{id:"theme-create",name:"创建主题","title-is":"h2",noPadding:""},{default:Object(i["Q"])(()=>[f,g,Object(i["i"])("li",x,[T,P,Object(i["l"])(U,{code:"\n// main.js\n\n// 导入组件库和主题\nimport ui from 'jet-plan-ui'\nimport { jetPLanLight } from 'jet-plan-ui-theme'\n\n// 拓展&安装主题\nui.$jetTheme.installTheme(\n    'jetPlanLight_Red', // 主题名称\n    {\n        primary:'#ef5961' // 要覆盖的 option\n    },\n    jetPlanLight // 蓝本主题,其中所有的 option 将被继承,\n)\n            "},null,8,["code"])]),Object(i["i"])("li",k,[w,L,Object(i["l"])(U,{lang:"javascript",code:"\n// jetPLanDark\n export default {\n    // BACKGROUND\n    foreground: '#363636',\n    background: '#202020',\n    disabled: '#535353',\n    border: '#6a6a6a',\n\n    // TEXT\n    'text-disabled': '#CCCCCC4d',\n    'text-hint': '#CCCCCC',\n    text: '#FCFCFC',\n\n    // INFO\n    secondary: this.border,\n    primary: '#1687a7',\n    success: '#4cd966',\n    warning: '#ecb02c',\n    error: '#f33f2e',\n    info: '#0d75ec',\n\n    // OTHERS\n    frosted_glass: this.foreground + 'b3',\n    card: this.foreground,\n    shadow: '#00000033',\n    mask: '#85858560',\n    'text-light': this.text,\n    'text-dark': '#505050',\n}\n          "},null,8,["code"])]),Object(i["i"])("li",$,[C,v,y,_,Object(i["l"])(U,{code:"\n// main.js\n\n// 导入组件库和主题\nimport ui from 'jet-plan-ui'\nimport { jetPLanLight } from 'jet-plan-ui-theme'\n\n// 拓展&安装主题\nui.$jetTheme.installTheme(\n    'jetPlanLight_Red', // 主题名称\n    {\n        myOption:'#ef5961' // 自定义 option\n    },\n    JetPlanLight // 蓝本主题,其中所有的 option 将被继承,\n)\n\n          "},null,8,["code"]),D,Object(i["l"])(U,{lang:"css",code:"\n /* 在css中访问 */\n.body{\n    background: var(--myOption);\n}\n          "},null,8,["code"]),J,Object(i["l"])(U,{lang:"JavaScript",code:"\n // 在组件中调用当前主题\n{\n    mounted(){\n        // 可通过 'jetTheme.theme' 访问到当前使用的主题\n        this.$jetTheme.theme.myOption\n    }\n}\n          "},null,8,["code"])])]),_:1}),Object(i["l"])(M,{id:"theme-auto-dark-mode",name:"创建自动深色模式","title-is":"h2",noPadding:""},{default:Object(i["Q"])(()=>[E,Object(i["l"])(U,{code:"\n// main.js\n\n// 导入组件库和主题\nimport ui from 'jet-plan-ui'\nimport { jetPLanLight, jetPLanDark } from 'jet-plan-ui-theme'\n\n// 安装主题\nui.$jetTheme.installTheme(\n    'jetPlanAuto', // 主题名称\n\n    // 将两个主题合并为一个主题\n    $jetTheme.toAuto(\n        jetPLanLight, // 第一位参数提供亮色主题\n        jetPLanDark // 第二位参数提供暗色主题\n    )\n)\n            "},null,8,["code"])]),_:1})]),_:1})])}var A=t("7ba7"),F=t("0924"),I={components:{DocItem:F["a"]},name:"the-demo-style",mixins:[A["a"]]},R=(t("9e11"),t("6b0d")),M=t.n(R);const U=M()(I,[["render",Q]]);n["default"]=U}}]);
//# sourceMappingURL=chunk-318ab6ac.6d5cee3d.js.map